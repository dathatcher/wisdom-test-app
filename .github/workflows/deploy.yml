name: 📦 Build and Deploy Hello World App

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'App version tag (e.g., v1.0.0)'
        required: true

  push:
    branches:
      - main

jobs:
  build-package:
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v3

    - name: 🏗️ Build tar.gz package
      run: |
        mkdir dist
        echo "VERSION=${{ github.event.inputs.version || 'pr' }}" >> $GITHUB_ENV
        TAR_NAME="hello_app_${VERSION}.tar.gz"
        echo "TAR_NAME=$TAR_NAME" >> $GITHUB_ENV
        tar -czvf dist/$TAR_NAME app.py requirements.txt

    - name: 💾 Upload tar.gz to GitHub Packages
      uses: actions/upload-artifact@v4
      with:
        name: hello-app
        path: dist/${{ env.TAR_NAME }}

  deploy-to-ec2:
    needs: build-package
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Download artifact
      uses: actions/download-artifact@v4
      with:
        name: hello-app

    - name: 📤 SCP to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: ${{ env.TAR_NAME }}
        target: /home/${{ secrets.EC2_USER }}/hello-app/

    - name: 🚀 SSH and Deploy with venv
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd hello-app
          rm -f app.py requirements.txt hello_app_*.tar.gz
          tar -xzvf hello_app_${{ github.event.inputs.version || 'pr' }}.tar.gz || tar -xzvf hello_app_pr.tar.gz
          rm -f hello_app_${{ github.event.inputs.version || 'pr' }}.tar.gz || rm -f hello_app_pr.tar.gz

          python3 -m venv venv
          source venv/bin/activate
          venv/bin/pip install --upgrade pip
          venv/bin/pip install -r requirements.txt

          pkill -f "venv/bin/python app.py" || true
          nohup venv/bin/python app.py > out.log 2>&1 &
