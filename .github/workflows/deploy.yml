name: 📦 Build and Deploy Hello World App

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-package:
    runs-on: ubuntu-latest
    outputs:
      tar_name: ${{ steps.set-tar-name.outputs.tar_name }}

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v3

    - name: 🕒 Generate timestamp and tarball name
      id: set-tar-name
      run: |
        TIMESTAMP=$(date +%Y%m%d%H%M%S)
        TAR_NAME="hello_app_v${TIMESTAMP}.tar.gz"
        echo "tar_name=${TAR_NAME}" >> $GITHUB_OUTPUT

    - name: 🏗️ Build tar.gz package
      run: |
        mkdir -p dist
        tar -czvf dist/${{ steps.set-tar-name.outputs.tar_name }} app.py requirements.txt

    - name: 💾 Upload tar.gz as artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.set-tar-name.outputs.tar_name }}
        path: dist/${{ steps.set-tar-name.outputs.tar_name }}

  deploy-to-ec2:
    needs: build-package
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Download artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ needs.build-package.outputs.tar_name }}
        path: ./artifact

    - name: 📤 SCP to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: artifact/${{ needs.build-package.outputs.tar_name }}
        target: /home/${{ secrets.EC2_USER }}/hello-app/

    - name: 🚀 SSH and Deploy with venv
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd hello-app
          TARBALL="${{ needs.build-package.outputs.tar_name }}"
          echo "📦 Unpacking $TARBALL"
          rm -f app.py requirements.txt hello_app_*.tar.gz
          tar -xzvf "$TARBALL"
          rm -f "$TARBALL"

          # Set up virtual environment
          python3 -m venv venv
          ./venv/bin/pip install --upgrade pip
          ./venv/bin/pip install -r requirements.txt

          # Stop any previous instance
          pkill -f "venv/bin/python app.py" || true

          # Start the app
          echo "✅ Launching app with Python:"
          ./venv/bin/python --version
          nohup ./venv/bin/python app.py > out.log 2>&1 &
